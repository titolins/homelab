---
- name: Create containers from template
  community.general.proxmox:
    api_host: "{{ pve.api.host }}"
    api_user: "{{ pve.api.user }}"
    api_password: "{{ pve.api.password }}"
    node: "{{ pve.node }}"
    tags:
      - ansible
      - lxc
    clone: "{{ lxc_template.vmid }}"
    clone_type: "full"
    storage: "{{ item.storage }}"
    vmid: "{{ item.vmid }}"
    hostname: "{{ item.name }}"
    onboot: true
    cores: "{{ item.cores }}"
    memory: "{{ item.memory }}"
    disk: "{{ item.storage }}:{{ item.disk_size }}"
    netif: '{"net0":"name=eth0,type=veth,bridge=vmbr0,tag={{ network.vlan_tag }},gw={{ network.gateway }},ip={{ item.ip_addr }},hwaddr={{ item.mac_addr }}"}'
  loop: "{{ containers }}"
  register: create_ct_res

# Did this as a hack because neither of adding the mounts on clone or trying to update using the proxmox role were working and I just wanted to get this done
- name: Configure mounts
  become: true
  vars:
    mount: "{{ item.1.storage }}:{{ item.1.size }},mp={{ item.1.mount_point }},{% if item.1.read_only is defined and item.1.read_only %}ro=1,{% endif %}{% if item.1.backup is defined and item.1.backup %}backup=1,{% endif %}{% if item.1.replicate is defined and item.1.replicate %}replicate=1{% endif %}"
  ansible.builtin.shell:
    cmd: pct set {{ item.0.vmid }} -{{ item.1.id }} {{ mount }}
  with_subelements:
    - "{{ containers }}"
    - mounts
  when: create_ct_res.changed

- name: Start containers
  community.general.proxmox:
    api_host: "{{ pve.api.host }}"
    api_user: "{{ pve.api.user }}"
    api_password: "{{ pve.api.password }}"
    node: "{{ pve.node }}"
    vmid: "{{ item.vmid }}"
    state: started
  loop: "{{ containers }}"
